{"version":3,"file":"Swup.module.js","sources":["../src/helpers/classify.ts","../src/helpers/getCurrentUrl.ts","../src/helpers/createHistoryRecord.ts","../src/helpers/updateHistoryRecord.ts","../src/helpers/delegateEvent.ts","../src/helpers/Location.ts","../src/helpers/matchPath.ts","../src/modules/fetchPage.ts","../src/modules/Cache.ts","../src/utils/index.ts","../src/modules/Classes.ts","../src/modules/Visit.ts","../src/modules/Hooks.ts","../src/modules/getAnchorElement.ts","../src/modules/awaitAnimations.ts","../src/modules/navigate.ts","../src/modules/animatePageOut.ts","../src/modules/replaceContent.ts","../src/modules/scrollToContent.ts","../src/modules/animatePageIn.ts","../src/modules/renderPage.ts","../src/modules/plugins.ts","../src/modules/resolveUrl.ts","../src/Swup.ts"],"sourcesContent":["/** Turn a string into a slug by lowercasing and replacing whitespace. */\nexport const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n","/** Get the current page URL: path name + query params. Optionally including hash. */\nexport const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn location.pathname + location.search + (hash ? location.hash : '');\n};\n","import { getCurrentUrl } from './getCurrentUrl.js';\n\nexport interface HistoryState {\n\turl: string;\n\tsource: 'swup';\n\trandom: number;\n\tindex?: number;\n\t[key: string]: unknown;\n}\n\n/** Create a new history record with a custom swup identifier. */\nexport const createHistoryRecord = (\n\turl: string,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst data: HistoryState = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.pushState(data, '', url);\n};\n","import type { HistoryState } from './createHistoryRecord.js';\nimport { getCurrentUrl } from './getCurrentUrl.js';\n\n/** Update the current history record with a custom swup identifier. */\nexport const updateHistoryRecord = (\n\turl: string | null = null,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst state = (history.state as HistoryState) || {};\n\tconst data: HistoryState = {\n\t\t...state,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.replaceState(data, '', url);\n};\n","import delegate, {\n\ttype DelegateEventHandler,\n\ttype DelegateOptions,\n\ttype EventType\n} from 'delegate-it';\nimport type { ParseSelector } from 'typed-query-selector/parser.js';\n\nexport type DelegateEventUnsubscribe = {\n\tdestroy: () => void;\n};\n\n/** Register a delegated event listener. */\nexport const delegateEvent = <\n\tSelector extends string,\n\tTElement extends Element = ParseSelector<Selector, HTMLElement>,\n\tTEvent extends EventType = EventType\n>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: DelegateEventHandler<GlobalEventHandlersEventMap[TEvent], TElement>,\n\toptions?: DelegateOptions\n): DelegateEventUnsubscribe => {\n\tconst controller = new AbortController();\n\toptions = { ...options, signal: controller.signal };\n\tdelegate<Selector, TElement, TEvent>(selector, type, callback, options);\n\treturn { destroy: () => controller.abort() };\n};\n","/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\nexport class Location extends URL {\n\tconstructor(url: URL | string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t\tObject.setPrototypeOf(this, Location.prototype);\n\t}\n\n\t/**\n\t * The full local path including query params.\n\t */\n\tget url(): string {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param el\n\t * @returns new Location instance\n\t */\n\tstatic fromElement(el: Element): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href') || '';\n\t\treturn new Location(href);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param url\n\t * @returns new Location instance\n\t */\n\tstatic fromUrl(url: URL | string): Location {\n\t\treturn new Location(url);\n\t}\n}\n","import { match } from 'path-to-regexp';\n\nimport type {\n\tPath,\n\tParseOptions,\n\tTokensToRegexpOptions,\n\tRegexpToFunctionOptions,\n\tMatchFunction\n} from 'path-to-regexp';\n\nexport { type Path };\n\n/** Create a match function from a path pattern that checks if a URLs matches it. */\nexport const matchPath = <P extends object = object>(\n\tpath: Path,\n\toptions?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n): MatchFunction<P> => {\n\ttry {\n\t\treturn match<P>(path, options);\n\t} catch (error) {\n\t\tthrow new Error(`[swup] Error parsing path \"${String(path)}\":\\n${String(error)}`);\n\t}\n};\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\n\n/** A page object as used by swup and its cache. */\nexport interface PageData {\n\t/** The URL of the page */\n\turl: string;\n\t/** The complete HTML response received from the server */\n\thtml: string;\n}\n\n/** Define how a page is fetched. */\nexport interface FetchOptions extends Omit<RequestInit, 'cache'> {\n\t/** The request method. */\n\tmethod?: 'GET' | 'POST';\n\t/** The body of the request: raw string, form data object or URL params. */\n\tbody?: string | FormData | URLSearchParams;\n\t/** The request timeout in milliseconds. */\n\ttimeout?: number;\n}\n\nexport class FetchError extends Error {\n\turl: string;\n\tstatus?: number;\n\taborted: boolean;\n\ttimedOut: boolean;\n\tconstructor(\n\t\tmessage: string,\n\t\tdetails: { url: string; status?: number; aborted?: boolean; timedOut?: boolean }\n\t) {\n\t\tsuper(message);\n\t\tthis.name = 'FetchError';\n\t\tthis.url = details.url;\n\t\tthis.status = details.status;\n\t\tthis.aborted = details.aborted || false;\n\t\tthis.timedOut = details.timedOut || false;\n\t}\n}\n\n/**\n * Fetch a page from the server, return it and cache it.\n */\nexport async function fetchPage(\n\tthis: Swup,\n\turl: URL | string,\n\toptions: FetchOptions = {}\n): Promise<PageData> {\n\turl = Location.fromUrl(url).url;\n\n\tconst headers = { ...this.options.requestHeaders, ...options.headers };\n\tconst timeout = options.timeout ?? this.options.timeout;\n\tconst controller = new AbortController();\n\tconst { signal } = controller;\n\toptions = { ...options, headers, signal };\n\n\tlet timedOut = false;\n\tlet timeoutId: ReturnType<typeof setTimeout> | null = null;\n\tif (timeout && timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimedOut = true;\n\t\t\tcontroller.abort('timeout');\n\t\t}, timeout);\n\t}\n\n\t// Allow hooking before this and returning a custom response-like object (e.g. custom fetch implementation)\n\tlet response: Response;\n\ttry {\n\t\tresponse = await this.hooks.call(\n\t\t\t'fetch:request',\n\t\t\t{ url, options },\n\t\t\t(visit, { url, options }) => fetch(url, options)\n\t\t);\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\t} catch (error) {\n\t\tif (timedOut) {\n\t\t\tthis.hooks.call('fetch:timeout', { url });\n\t\t\tthrow new FetchError(`Request timed out: ${url}`, { url, timedOut });\n\t\t}\n\t\tif ((error as Error)?.name === 'AbortError' || signal.aborted) {\n\t\t\tthrow new FetchError(`Request aborted: ${url}`, {\n\t\t\t\turl: url,\n\t\t\t\taborted: true\n\t\t\t});\n\t\t}\n\t\tthrow error;\n\t}\n\n\tconst { status, url: responseUrl } = response;\n\tconst html = await response.text();\n\n\tif (status === 500) {\n\t\tthis.hooks.call('fetch:error', { status, response, url: responseUrl });\n\t\tthrow new FetchError(`Server error: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\tif (!html) {\n\t\tthrow new FetchError(`Empty response: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\t// Resolve real url after potential redirect\n\tconst { url: finalUrl } = Location.fromUrl(responseUrl);\n\tconst page = { url: finalUrl, html };\n\n\t// Write to cache for safe methods and non-redirects\n\tif (\n\t\tthis.visit.cache.write &&\n\t\t(!options.method || options.method === 'GET') &&\n\t\turl === finalUrl\n\t) {\n\t\tthis.cache.set(page.url, page);\n\t}\n\n\treturn page;\n}\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport { type PageData } from './fetchPage.js';\n\nexport interface CacheData extends PageData {}\n\n/**\n * In-memory page cache.\n */\nexport class Cache {\n\t/** Swup instance this cache belongs to */\n\tprotected swup: Swup;\n\n\t/** Cached pages, indexed by URL */\n\tprotected pages: Map<string, CacheData> = new Map();\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\t/** Number of cached pages in memory. */\n\tget size(): number {\n\t\treturn this.pages.size;\n\t}\n\n\t/** All cached pages. */\n\tget all() {\n\t\tconst copy = new Map();\n\t\tthis.pages.forEach((page, key) => {\n\t\t\tcopy.set(key, { ...page });\n\t\t});\n\t\treturn copy;\n\t}\n\n\t/** Check if the given URL has been cached. */\n\thas(url: string): boolean {\n\t\treturn this.pages.has(this.resolve(url));\n\t}\n\n\t/** Return a shallow copy of the cached page object if available. */\n\tget(url: string): CacheData | undefined {\n\t\tconst result = this.pages.get(this.resolve(url));\n\t\tif (!result) return result;\n\t\treturn { ...result };\n\t}\n\n\t/** Create a cache record for the specified URL. */\n\tset(url: string, page: CacheData) {\n\t\turl = this.resolve(url);\n\t\tpage = { ...page, url };\n\t\tthis.pages.set(url, page);\n\t\tthis.swup.hooks.callSync('cache:set', { page });\n\t}\n\n\t/** Update a cache record, overwriting or adding custom data. */\n\tupdate(url: string, payload: object) {\n\t\turl = this.resolve(url);\n\t\tconst page = { ...this.get(url), ...payload, url } as CacheData;\n\t\tthis.pages.set(url, page);\n\t}\n\n\t/** Delete a cache record. */\n\tdelete(url: string): void {\n\t\tthis.pages.delete(this.resolve(url));\n\t}\n\n\t/** Empty the cache. */\n\tclear(): void {\n\t\tthis.pages.clear();\n\t\tthis.swup.hooks.callSync('cache:clear', undefined);\n\t}\n\n\t/** Remove all cache entries that return true for a given predicate function.  */\n\tprune(predicate: (url: string, page: CacheData) => boolean): void {\n\t\tthis.pages.forEach((page, url) => {\n\t\t\tif (predicate(url, page)) {\n\t\t\t\tthis.delete(url);\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Resolve URLs by making them local and letting swup resolve them. */\n\tprotected resolve(urlToResolve: string): string {\n\t\tconst { url } = Location.fromUrl(urlToResolve);\n\t\treturn this.swup.resolveUrl(url);\n\t}\n}\n","/** Find an element by selector. */\nexport const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\n/** Find a set of elements by selector. */\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\n/** Return a Promise that resolves after the next event loop. */\nexport const nextTick = (): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\trequestAnimationFrame(() => {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n};\n\n/** Check if an object is a Promise or a Thenable */\nexport function isPromise<T>(obj: unknown): obj is PromiseLike<T> {\n\treturn (\n\t\t!!obj &&\n\t\t(typeof obj === 'object' || typeof obj === 'function') &&\n\t\ttypeof (obj as Record<string, unknown>).then === 'function'\n\t);\n}\n\n/** Call a function as a Promise. Resolves with the returned Promsise or immediately. */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nexport function runAsPromise(func: Function, args: unknown[] = []): Promise<unknown> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst result: unknown = func(...args);\n\t\tif (isPromise(result)) {\n\t\t\tresult.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n}\n\n/**\n * Force a layout reflow, e.g. after adding classnames\n * @returns The offset height, just here so it doesn't get optimized away by the JS engine\n * @see https://stackoverflow.com/a/21665117/3759615\n */\nexport function forceReflow(element?: HTMLElement) {\n\telement = element || document.body;\n\treturn element?.offsetHeight;\n}\n\n/** Escape a string with special chars to not break CSS selectors. */\nexport const escapeCssIdentifier = (ident: string) => {\n\t// @ts-ignore this is for support check, so it's correct that TS complains\n\tif (window.CSS && window.CSS.escape) {\n\t\treturn CSS.escape(ident);\n\t}\n\treturn ident;\n};\n\n/** Fix for Chrome below v61 formatting CSS floats with comma in some locales. */\nexport const toMs = (s: string) => {\n\treturn Number(s.slice(0, -1).replace(',', '.')) * 1000;\n};\n","import type Swup from '../Swup.js';\nimport { queryAll } from '../utils.js';\n\nexport class Classes {\n\tprotected swup: Swup;\n\tprotected swupClasses = ['to-', 'is-changing', 'is-rendering', 'is-popstate', 'is-animating'];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tprotected get selectors(): string[] {\n\t\tconst { scope } = this.swup.visit.animation;\n\t\tif (scope === 'containers') return this.swup.visit.containers;\n\t\tif (scope === 'html') return ['html'];\n\t\tif (Array.isArray(scope)) return scope;\n\t\treturn [];\n\t}\n\n\tprotected get selector(): string {\n\t\treturn this.selectors.join(',');\n\t}\n\n\tprotected get targets(): HTMLElement[] {\n\t\tif (!this.selector.trim()) return [];\n\t\treturn queryAll(this.selector);\n\t}\n\n\tadd(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.add(...classes));\n\t}\n\n\tremove(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.remove(...classes));\n\t}\n\n\tclear(): void {\n\t\tthis.targets.forEach((target) => {\n\t\t\tconst remove = target.className.split(' ').filter((c) => this.isSwupClass(c));\n\t\t\ttarget.classList.remove(...remove);\n\t\t});\n\t}\n\n\tprotected isSwupClass(className: string): boolean {\n\t\treturn this.swupClasses.some((c) => className.startsWith(c));\n\t}\n}\n","import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport type { HistoryAction, HistoryDirection } from './navigate.js';\n\n/** An object holding details about the current visit. */\nexport interface Visit {\n\t/** A unique ID to identify this visit */\n\tid: number;\n\t/** The previous page, about to leave */\n\tfrom: VisitFrom;\n\t/** The next page, about to enter */\n\tto: VisitTo;\n\t/** The content containers, about to be replaced */\n\tcontainers: Options['containers'];\n\t/** Information about animated page transitions */\n\tanimation: VisitAnimation;\n\t/** What triggered this visit */\n\ttrigger: VisitTrigger;\n\t/** Cache behavior for this visit */\n\tcache: VisitCache;\n\t/** Browser history behavior on this visit */\n\thistory: VisitHistory;\n\t/** Scroll behavior on this visit */\n\tscroll: VisitScroll;\n}\n\nexport interface VisitFrom {\n\t/** The URL of the previous page */\n\turl: string;\n}\n\nexport interface VisitTo {\n\t/** The URL of the next page */\n\turl: string;\n\t/** The hash of the next page */\n\thash?: string;\n\t/** The HTML content of the next page */\n\thtml?: string;\n}\n\nexport interface VisitAnimation {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate: boolean;\n\t/** Whether to wait for the next page to load before starting the animation. Default: `false` */\n\twait: boolean;\n\t/** Name of a custom animation to run. */\n\tname?: string;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tscope: 'html' | 'containers' | string[];\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tselector: Options['animationSelector'];\n}\n\nexport interface VisitScroll {\n\t/** Whether to reset the scroll position after the visit. Default: `true` */\n\treset: boolean;\n\t/** Anchor element to scroll to on the next page. */\n\ttarget?: string | false;\n}\n\nexport interface VisitTrigger {\n\t/** DOM element that triggered this visit. */\n\tel?: Element;\n\t/** DOM event that triggered this visit. */\n\tevent?: Event;\n}\n\nexport interface VisitCache {\n\t/** Whether this visit will try to load the requested page from cache. */\n\tread: boolean;\n\t/** Whether this visit will save the loaded page in cache. */\n\twrite: boolean;\n}\n\nexport interface VisitHistory {\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\taction: HistoryAction;\n\t/** Whether this visit was triggered by a browser history navigation. */\n\tpopstate: boolean;\n\t/** The direction of travel in case of a browser history navigation: backward or forward. */\n\tdirection: HistoryDirection | undefined;\n}\n\nexport interface VisitInitOptions {\n\tto: string;\n\tfrom?: string;\n\thash?: string;\n\tel?: Element;\n\tevent?: Event;\n}\n\n/** Create a new visit object. */\nexport function createVisit(\n\tthis: Swup,\n\t{ to, from = this.currentPageUrl, hash, el, event }: VisitInitOptions\n): Visit {\n\treturn {\n\t\tid: Math.random(),\n\t\tfrom: { url: from },\n\t\tto: { url: to, hash },\n\t\tcontainers: this.options.containers,\n\t\tanimation: {\n\t\t\tanimate: true,\n\t\t\twait: false,\n\t\t\tname: undefined,\n\t\t\tscope: this.options.animationScope,\n\t\t\tselector: this.options.animationSelector\n\t\t},\n\t\ttrigger: {\n\t\t\tel,\n\t\t\tevent\n\t\t},\n\t\tcache: {\n\t\t\tread: this.options.cache,\n\t\t\twrite: this.options.cache\n\t\t},\n\t\thistory: {\n\t\t\taction: 'push',\n\t\t\tpopstate: false,\n\t\t\tdirection: undefined\n\t\t},\n\t\tscroll: {\n\t\t\treset: true,\n\t\t\ttarget: undefined\n\t\t}\n\t};\n}\n","import type { DelegateEvent } from 'delegate-it';\n\nimport type Swup from '../Swup.js';\nimport { isPromise, runAsPromise } from '../utils.js';\nimport type { Visit } from './Visit.js';\nimport type { FetchOptions, PageData } from './fetchPage.js';\n\nexport interface HookDefinitions {\n\t'animation:out:start': undefined;\n\t'animation:out:await': { skip: boolean };\n\t'animation:out:end': undefined;\n\t'animation:in:start': undefined;\n\t'animation:in:await': { skip: boolean };\n\t'animation:in:end': undefined;\n\t'animation:skip': undefined;\n\t'cache:clear': undefined;\n\t'cache:set': { page: PageData };\n\t'content:replace': { page: PageData };\n\t'content:scroll': undefined;\n\t'enable': undefined;\n\t'disable': undefined;\n\t'fetch:request': { url: string; options: FetchOptions };\n\t'fetch:error': { url: string; status: number; response: Response };\n\t'fetch:timeout': { url: string };\n\t'history:popstate': { event: PopStateEvent };\n\t'link:click': { el: HTMLAnchorElement; event: DelegateEvent<MouseEvent> };\n\t'link:self': undefined;\n\t'link:anchor': { hash: string };\n\t'link:newtab': { href: string };\n\t'page:load': { page?: PageData; cache?: boolean; options: FetchOptions };\n\t'page:view': { url: string; title: string };\n\t'scroll:top': { options: ScrollIntoViewOptions };\n\t'scroll:anchor': { hash: string; options: ScrollIntoViewOptions };\n\t'visit:start': undefined;\n\t'visit:transition': undefined;\n\t'visit:end': undefined;\n}\n\nexport interface HookReturnValues {\n\t'content:scroll': Promise<boolean>;\n\t'fetch:request': Promise<Response>;\n\t'page:load': Promise<PageData>;\n\t'scroll:top': boolean;\n\t'scroll:anchor': boolean;\n\t'visit:transition': Promise<boolean>;\n}\n\nexport type HookArguments<T extends HookName> = HookDefinitions[T];\n\nexport type HookName = keyof HookDefinitions;\n\n/** A generic hook handler. */\nexport type HookHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>\n) => Promise<unknown> | unknown;\n\n/** A default hook handler with an expected return type. */\nexport type HookDefaultHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>,\n\t/** Default handler to be executed. Available if replacing an internal hook handler. */\n\tdefaultHandler?: HookDefaultHandler<T>\n) => T extends keyof HookReturnValues ? HookReturnValues[T] : Promise<unknown> | unknown;\n\nexport type Handlers = {\n\t[K in HookName]: HookHandler<K>[];\n};\n\n/** Unregister a previously registered hook handler. */\nexport type HookUnregister = () => void;\n\n/** Define when and how a hook handler is executed. */\nexport type HookOptions = {\n\t/** Execute the hook once, then remove the handler */\n\tonce?: boolean;\n\t/** Execute the hook before the internal default handler */\n\tbefore?: boolean;\n\t/** Set a priority for when to execute this hook. Lower numbers execute first. Default: `0` */\n\tpriority?: number;\n\t/** Replace the internal default handler with this hook handler */\n\treplace?: boolean;\n};\n\nexport type HookRegistration<\n\tT extends HookName,\n\tH extends HookHandler<T> | HookDefaultHandler<T> = HookHandler<T>\n> = {\n\tid: number;\n\thook: T;\n\thandler: H;\n\tdefaultHandler?: HookDefaultHandler<T>;\n} & HookOptions;\n\ntype HookEventDetail = {\n\thook: HookName;\n\targs: unknown;\n\tvisit: Visit;\n};\n\nexport type HookEvent = CustomEvent<HookEventDetail>;\n\ntype HookLedger<T extends HookName> = Map<HookHandler<T>, HookRegistration<T>>;\n\ninterface HookRegistry extends Map<HookName, HookLedger<HookName>> {\n\tget<K extends HookName>(key: K): HookLedger<K> | undefined;\n\tset<K extends HookName>(key: K, value: HookLedger<K>): this;\n}\n\n/**\n * Hook registry.\n *\n * Create, trigger and handle hooks.\n *\n */\nexport class Hooks {\n\t/** Swup instance this registry belongs to */\n\tprotected swup: Swup;\n\n\t/** Map of all registered hook handlers. */\n\tprotected registry: HookRegistry = new Map();\n\n\t// Can we deduplicate this somehow? Or make it error when not in sync with HookDefinitions?\n\t// https://stackoverflow.com/questions/53387838/how-to-ensure-an-arrays-values-the-keys-of-a-typescript-interface/53395649\n\tprotected readonly hooks: HookName[] = [\n\t\t'animation:out:start',\n\t\t'animation:out:await',\n\t\t'animation:out:end',\n\t\t'animation:in:start',\n\t\t'animation:in:await',\n\t\t'animation:in:end',\n\t\t'animation:skip',\n\t\t'cache:clear',\n\t\t'cache:set',\n\t\t'content:replace',\n\t\t'content:scroll',\n\t\t'enable',\n\t\t'disable',\n\t\t'fetch:request',\n\t\t'fetch:error',\n\t\t'fetch:timeout',\n\t\t'history:popstate',\n\t\t'link:click',\n\t\t'link:self',\n\t\t'link:anchor',\n\t\t'link:newtab',\n\t\t'page:load',\n\t\t'page:view',\n\t\t'scroll:top',\n\t\t'scroll:anchor',\n\t\t'visit:start',\n\t\t'visit:transition',\n\t\t'visit:end'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Create ledgers for all core hooks.\n\t */\n\tprotected init() {\n\t\tthis.hooks.forEach((hook) => this.create(hook));\n\t}\n\n\t/**\n\t * Create a new hook type.\n\t */\n\tcreate(hook: string) {\n\t\tif (!this.registry.has(hook as HookName)) {\n\t\t\tthis.registry.set(hook as HookName, new Map());\n\t\t}\n\t}\n\n\t/**\n\t * Check if a hook type exists.\n\t */\n\texists(hook: HookName): boolean {\n\t\treturn this.registry.has(hook);\n\t}\n\n\t/**\n\t * Get the ledger with all registrations for a hook.\n\t */\n\tprotected get<T extends HookName>(hook: T): HookLedger<T> | undefined {\n\t\tconst ledger = this.registry.get(hook);\n\t\tif (ledger) {\n\t\t\treturn ledger;\n\t\t}\n\t\tconsole.error(`Unknown hook '${hook}'`);\n\t}\n\n\t/**\n\t * Remove all handlers of all hooks.\n\t */\n\tclear() {\n\t\tthis.registry.forEach((ledger) => ledger.clear());\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Object to specify how and when the handler is executed\n\t *                Available options:\n\t *                - `once`: Only execute the handler once\n\t *                - `before`: Execute the handler before the default handler\n\t *                - `priority`: Specify the order in which the handlers are executed\n\t *                - `replace`: Replace the default handler with this handler\n\t * @returns A function to unregister the handler\n\t */\n\n\t// Overload: replacing default handler\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookDefaultHandler<T>, options: O & { replace: true }): HookUnregister; // prettier-ignore\n\t// Overload: passed in handler options\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookHandler<T>, options: O): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\ton<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\ton<T extends HookName, O extends HookOptions>(\n\t\thook: T,\n\t\thandler: O['replace'] extends true ? HookDefaultHandler<T> : HookHandler<T>,\n\t\toptions: Partial<O> = {}\n\t): HookUnregister {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\tconsole.warn(`Hook '${hook}' not found.`);\n\t\t\treturn () => {};\n\t\t}\n\n\t\tconst id = ledger.size + 1;\n\t\tconst registration: HookRegistration<T> = { ...options, id, hook, handler };\n\t\tledger.set(handler, registration);\n\n\t\treturn () => this.off(hook, handler);\n\t}\n\n\t/**\n\t * Register a new hook handler to run before the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { before: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tbefore<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to replace the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { replace: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute instead of the default handler\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\treplace<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookDefaultHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to run once.\n\t * Shortcut for `hooks.on(hook, handler, { once: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tonce<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\t/**\n\t * Unregister a hook handler.\n\t * @param hook Name of the hook the handler is registered for\n\t * @param handler The handler function that was registered.\n\t *                If omitted, all handlers for the hook will be removed.\n\t */\n\t// Overload: unregister a specific handler\n\toff<T extends HookName>(hook: T, handler: HookHandler<T> | HookDefaultHandler<T>): void;\n\t// Overload: unregister all handlers\n\toff<T extends HookName>(hook: T): void;\n\t// Implementation\n\toff<T extends HookName>(hook: T, handler?: HookHandler<T> | HookDefaultHandler<T>): void {\n\t\tconst ledger = this.get(hook);\n\t\tif (ledger && handler) {\n\t\t\tconst deleted = ledger.delete(handler);\n\t\t\tif (!deleted) {\n\t\t\t\tconsole.warn(`Handler for hook '${hook}' not found.`);\n\t\t\t}\n\t\t} else if (ledger) {\n\t\t\tledger.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Trigger a hook asynchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order and `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The resolved return value of the executed default handler\n\t */\n\tasync call<T extends HookName>(\n\t\thook: T,\n\t\targs: HookArguments<T>,\n\t\tdefaultHandler?: HookDefaultHandler<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>> {\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tawait this.run(before, args);\n\t\tconst [result] = await this.run(handler, args);\n\t\tawait this.run(after, args);\n\t\tthis.dispatchDomEvent(hook, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Trigger a hook synchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order, but will **not** `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The (possibly unresolved) return value of the executed default handler\n\t */\n\tcallSync<T extends HookName>(\n\t\thook: T,\n\t\targs: HookArguments<T>,\n\t\tdefaultHandler?: HookDefaultHandler<T>\n\t): ReturnType<HookDefaultHandler<T>> {\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tthis.runSync(before, args);\n\t\tconst [result] = this.runSync(handler, args);\n\t\tthis.runSync(after, args);\n\t\tthis.dispatchDomEvent(hook, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, as `Promise`s that will be `await`ed.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], args: HookArguments<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>[]>; // prettier-ignore\n\t// Overload:  running user handler: expect no specific type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T>[], args: HookArguments<T>): Promise<unknown[]>; // prettier-ignore\n\t// Implementation\n\tprotected async run<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\targs: HookArguments<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>> | unknown[]> {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tconst result = await runAsPromise(handler, [this.swup.visit, args, defaultHandler]);\n\t\t\tresults.push(result);\n\t\t\tif (once) {\n\t\t\t\tthis.off(hook, handler);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, without `await`ing any returned `Promise`s.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], args: HookArguments<T> ): ReturnType<HookDefaultHandler<T>>[]; // prettier-ignore\n\t// Overload: running user handler: expect no specific type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T>[], args: HookArguments<T>): unknown[]; // prettier-ignore\n\t// Implementation\n\tprotected runSync<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\targs: HookArguments<T>\n\t): (ReturnType<HookDefaultHandler<T>> | unknown)[] {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tconst result = (handler as HookDefaultHandler<T>)(this.swup.visit, args, defaultHandler); // prettier-ignore\n\t\t\tresults.push(result);\n\t\t\tif (isPromise(result)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Promise returned from handler for synchronous hook '${hook}'.` +\n\t\t\t\t\t\t`Swup will not wait for it to resolve.`\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (once) {\n\t\t\t\tthis.off(hook, handler);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Get all registered handlers for a hook, sorted by priority and registration order.\n\t * @param hook Name of the hook\n\t * @param defaultHandler The optional default handler of this hook\n\t * @returns An object with the handlers sorted into `before` and `after` arrays,\n\t *          as well as a flag indicating if the original handler was replaced\n\t */\n\tprotected getHandlers<T extends HookName>(hook: T, defaultHandler?: HookDefaultHandler<T>) {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\treturn { found: false, before: [], handler: [], after: [], replaced: false };\n\t\t}\n\n\t\tconst registrations = Array.from(ledger.values());\n\n\t\t// Let TypeScript know that replaced handlers are default handlers by filtering to true\n\t\tconst def = (T: HookRegistration<T>): T is HookRegistration<T, HookDefaultHandler<T>> => true; // prettier-ignore\n\t\tconst sort = this.sortRegistrations;\n\n\t\t// Filter into before, after, and replace handlers\n\t\tconst before = registrations.filter(({ before, replace }) => before && !replace).sort(sort);\n\t\tconst replace = registrations.filter(({ replace }) => replace).filter(def).sort(sort); // prettier-ignore\n\t\tconst after = registrations.filter(({ before, replace }) => !before && !replace).sort(sort);\n\t\tconst replaced = replace.length > 0;\n\n\t\t// Define main handler registration\n\t\t// Created as HookRegistration[] array to allow passing it into hooks.run() directly\n\t\tlet handler: HookRegistration<T, HookDefaultHandler<T>>[] = [];\n\t\tif (defaultHandler) {\n\t\t\thandler = [{ id: 0, hook, handler: defaultHandler }];\n\t\t\tif (replaced) {\n\t\t\t\tconst index = replace.length - 1;\n\t\t\t\tconst replacingHandler = replace[index].handler;\n\t\t\t\tconst createDefaultHandler = (index: number): HookDefaultHandler<T> | undefined => {\n\t\t\t\t\tconst next = replace[index - 1];\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\treturn (visit, args) =>\n\t\t\t\t\t\t\tnext.handler(visit, args, createDefaultHandler(index - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn defaultHandler;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst nestedDefaultHandler = createDefaultHandler(index);\n\t\t\t\thandler = [\n\t\t\t\t\t{ id: 0, hook, handler: replacingHandler, defaultHandler: nestedDefaultHandler }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn { found: true, before, handler, after, replaced };\n\t}\n\n\t/**\n\t * Sort two hook registrations by priority and registration order.\n\t * @param a The registration object to compare\n\t * @param b The other registration object to compare with\n\t * @returns The sort direction\n\t */\n\tprotected sortRegistrations<T extends HookName>(\n\t\ta: HookRegistration<T>,\n\t\tb: HookRegistration<T>\n\t): number {\n\t\tconst priority = (a.priority ?? 0) - (b.priority ?? 0);\n\t\tconst id = a.id - b.id;\n\t\treturn priority || id || 0;\n\t}\n\n\t/**\n\t * Dispatch a custom event on the `document` for a hook. Prefixed with `swup:`\n\t * @param hook Name of the hook.\n\t */\n\tprotected dispatchDomEvent<T extends HookName>(hook: T, args?: HookArguments<T>): void {\n\t\tconst detail: HookEventDetail = { hook, args, visit: this.swup.visit };\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:any`, { detail, bubbles: true })\n\t\t);\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:${hook}`, { detail, bubbles: true })\n\t\t);\n\t}\n}\n","import { escapeCssIdentifier as escape, query } from '../utils.js';\n\n/**\n * Find the anchor element for a given hash.\n *\n * @param hash Hash with or without leading '#'\n * @returns The element, if found, or null.\n *\n * @see https://html.spec.whatwg.org/#find-a-potential-indicated-element\n */\nexport const getAnchorElement = (hash?: string): Element | null => {\n\tif (hash && hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tconst decoded = decodeURIComponent(hash);\n\tlet element =\n\t\tdocument.getElementById(hash) ||\n\t\tdocument.getElementById(decoded) ||\n\t\tquery(`a[name='${escape(hash)}']`) ||\n\t\tquery(`a[name='${escape(decoded)}']`);\n\n\tif (!element && hash === 'top') {\n\t\telement = document.body;\n\t}\n\n\treturn element;\n};\n","import { queryAll, toMs } from '../utils.js';\nimport type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION;\ntype AnimationProperties = 'Delay' | 'Duration';\ntype AnimationStyleKeys = `${AnimationTypes}${AnimationProperties}` | 'transitionProperty';\ntype AnimationStyleDeclarations = Pick<CSSStyleDeclaration, AnimationStyleKeys>;\n\nexport type AnimationDirection = 'in' | 'out';\n\n/**\n * Return a Promise that resolves when all CSS animations and transitions\n * are done on the page. Filters by selector or takes elements directly.\n */\nexport async function awaitAnimations(\n\tthis: Swup,\n\t{\n\t\telements,\n\t\tselector\n\t}: {\n\t\tselector: Options['animationSelector'];\n\t\telements?: NodeListOf<HTMLElement> | HTMLElement[];\n\t}\n): Promise<void> {\n\t// Allow usage of swup without animations: { animationSelector: false }\n\tif (selector === false && !elements) {\n\t\treturn;\n\t}\n\n\t// Allow passing in elements\n\tlet animatedElements: HTMLElement[] = [];\n\tif (elements) {\n\t\tanimatedElements = Array.from(elements);\n\t} else if (selector) {\n\t\tanimatedElements = queryAll(selector, document.body);\n\t\t// Warn if no elements match the selector, but keep things going\n\t\tif (!animatedElements.length) {\n\t\t\tconsole.warn(`[swup] No elements found matching animationSelector \\`${selector}\\``);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst awaitedAnimations = animatedElements.map((el) => awaitAnimationsOnElement(el));\n\tconst hasAnimations = awaitedAnimations.filter(Boolean).length > 0;\n\tif (!hasAnimations) {\n\t\tif (selector) {\n\t\t\tconsole.warn(\n\t\t\t\t`[swup] No CSS animation duration defined on elements matching \\`${selector}\\``\n\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tawait Promise.all(awaitedAnimations);\n}\n\nfunction awaitAnimationsOnElement(element: Element): Promise<void> | false {\n\tconst { type, timeout, propCount } = getTransitionInfo(element);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\treturn false;\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent = `${type}end`;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd: EventListener = (event) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isTransitionOrAnimationEvent(event)) {\n\t\t\t\tthrow new Error('Not a transition or animation event.');\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nexport function getTransitionInfo(element: Element, expectedType?: AnimationTypes) {\n\tconst styles = window.getComputedStyle(element) as AnimationStyleDeclarations;\n\n\tconst transitionDelays = getStyleProperties(styles, `${TRANSITION}Delay`);\n\tconst transitionDurations = getStyleProperties(styles, `${TRANSITION}Duration`);\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\tconst animationDelays = getStyleProperties(styles, `${ANIMATION}Delay`);\n\tconst animationDurations = getStyleProperties(styles, `${ANIMATION}Duration`);\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tlet type: AnimationTypes | null = null;\n\tlet timeout = 0;\n\tlet propCount = 0;\n\n\tif (expectedType === TRANSITION) {\n\t\tif (transitionTimeout > 0) {\n\t\t\ttype = TRANSITION;\n\t\t\ttimeout = transitionTimeout;\n\t\t\tpropCount = transitionDurations.length;\n\t\t}\n\t} else if (expectedType === ANIMATION) {\n\t\tif (animationTimeout > 0) {\n\t\t\ttype = ANIMATION;\n\t\t\ttimeout = animationTimeout;\n\t\t\tpropCount = animationDurations.length;\n\t\t}\n\t} else {\n\t\ttimeout = Math.max(transitionTimeout, animationTimeout);\n\t\ttype = timeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n\t\tpropCount = type\n\t\t\t? type === TRANSITION\n\t\t\t\t? transitionDurations.length\n\t\t\t\t: animationDurations.length\n\t\t\t: 0;\n\t}\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nfunction isTransitionOrAnimationEvent(event: Event): event is TransitionEvent | AnimationEvent {\n\treturn [`${TRANSITION}end`, `${ANIMATION}end`].includes(event.type);\n}\n\nfunction getStyleProperties(styles: AnimationStyleDeclarations, key: AnimationStyleKeys): string[] {\n\treturn (styles[key] || '').split(', ');\n}\n\nfunction calculateTimeout(delays: string[], durations: string[]): number {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n","import type Swup from '../Swup.js';\nimport { createHistoryRecord, updateHistoryRecord, getCurrentUrl, Location } from '../helpers.js';\nimport { FetchError, type FetchOptions, type PageData } from './fetchPage.js';\nimport type { VisitInitOptions } from './Visit.js';\n\nexport type HistoryAction = 'push' | 'replace';\nexport type HistoryDirection = 'forwards' | 'backwards';\nexport type NavigationToSelfAction = 'scroll' | 'navigate';\nexport type CacheControl = Partial<{ read: boolean; write: boolean }>;\n\n/** Define how to navigate to a page. */\ntype NavigationOptions = {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate?: boolean;\n\t/** Name of a custom animation to run. */\n\tanimation?: string;\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\thistory?: HistoryAction;\n\t/** Whether this visit should read from or write to the cache. */\n\tcache?: CacheControl;\n};\n\n/**\n * Navigate to a new URL.\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport function navigate(\n\tthis: Swup,\n\turl: string,\n\toptions: NavigationOptions & FetchOptions = {},\n\tinit: Omit<VisitInitOptions, 'to'> = {}\n) {\n\tif (typeof url !== 'string') {\n\t\tthrow new Error(`swup.navigate() requires a URL parameter`);\n\t}\n\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url, { el: init.el, event: init.event })) {\n\t\twindow.location.href = url;\n\t\treturn;\n\t}\n\n\tconst { url: to, hash } = Location.fromUrl(url);\n\tthis.visit = this.createVisit({ ...init, to, hash });\n\tthis.performNavigation(options);\n}\n\n/**\n * Start a visit to a new URL.\n *\n * Internal method that assumes the visit context has already been created.\n *\n * As a user, you should call `swup.navigate(url)` instead.\n *\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport async function performNavigation(\n\tthis: Swup,\n\toptions: NavigationOptions & FetchOptions = {}\n): Promise<void> {\n\tthis.navigating = true;\n\t// Save this localy to a) allow ignoring the visit if a new one was started in the meantime\n\t// and b) avoid unintended modifications to any newer visits\n\tconst visit = this.visit;\n\n\tconst { el } = visit.trigger;\n\toptions.referrer = options.referrer || this.currentPageUrl;\n\n\tif (options.animate === false) {\n\t\tvisit.animation.animate = false;\n\t}\n\n\t// Clean up old animation classes\n\tif (!visit.animation.animate) {\n\t\tthis.classes.clear();\n\t}\n\n\t// Get history action from option or attribute on trigger element\n\tconst history = options.history || el?.getAttribute('data-swup-history') || undefined;\n\tif (history && ['push', 'replace'].includes(history)) {\n\t\tvisit.history.action = history as HistoryAction;\n\t}\n\n\t// Get custom animation name from option or attribute on trigger element\n\tconst animation = options.animation || el?.getAttribute('data-swup-animation') || undefined;\n\tif (animation) {\n\t\tvisit.animation.name = animation;\n\t}\n\n\t// Sanitize cache option\n\tif (typeof options.cache === 'object') {\n\t\tvisit.cache.read = options.cache.read ?? visit.cache.read;\n\t\tvisit.cache.write = options.cache.write ?? visit.cache.write;\n\t} else if (options.cache !== undefined) {\n\t\tvisit.cache = { read: !!options.cache, write: !!options.cache };\n\t}\n\t// Delete this so that window.fetch doesn't mis-interpret it\n\tdelete options.cache;\n\n\ttry {\n\t\tawait this.hooks.call('visit:start', undefined);\n\n\t\t// Begin loading page\n\t\tconst pagePromise = this.hooks.call('page:load', { options }, async (visit, args) => {\n\t\t\t// Read from cache\n\t\t\tlet cachedPage: PageData | undefined;\n\t\t\tif (visit.cache.read) {\n\t\t\t\tcachedPage = this.cache.get(visit.to.url);\n\t\t\t}\n\n\t\t\targs.page = cachedPage || (await this.fetchPage(visit.to.url, args.options));\n\t\t\targs.cache = !!cachedPage;\n\n\t\t\treturn args.page;\n\t\t});\n\n\t\t// Create/update history record if this is not a popstate call or leads to the same URL\n\t\tif (!visit.history.popstate) {\n\t\t\t// Add the hash directly from the trigger element\n\t\t\tconst newUrl = visit.to.url + visit.to.hash;\n\t\t\tif (visit.history.action === 'replace' || visit.to.url === this.currentPageUrl) {\n\t\t\t\tupdateHistoryRecord(newUrl);\n\t\t\t} else {\n\t\t\t\tthis.currentHistoryIndex++;\n\t\t\t\tcreateHistoryRecord(newUrl, { index: this.currentHistoryIndex });\n\t\t\t}\n\t\t}\n\n\t\tthis.currentPageUrl = getCurrentUrl();\n\n\t\t// Wait for page before starting to animate out?\n\t\tif (visit.animation.wait) {\n\t\t\tconst { html } = await pagePromise;\n\t\t\tvisit.to.html = html;\n\t\t}\n\n\t\t// perform the actual transition: animate and replace content\n\t\tawait this.hooks.call('visit:transition', undefined, async (visit) => {\n\t\t\t// Start leave animation\n\t\t\tconst animationPromise = this.animatePageOut();\n\n\t\t\t// Wait for page to load and leave animation to finish\n\t\t\tconst [page] = await Promise.all([pagePromise, animationPromise]);\n\n\t\t\t// Abort if another visit was started in the meantime\n\t\t\tif (visit.id !== this.visit.id) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Render page: replace content and scroll to top/fragment\n\t\t\tawait this.renderPage(page);\n\n\t\t\t// Wait for enter animation\n\t\t\tawait this.animatePageIn();\n\n\t\t\treturn true;\n\t\t});\n\n\t\t// Finalize visit\n\t\tawait this.hooks.call('visit:end', undefined, () => this.classes.clear());\n\n\t\t// Reset visit info after finish?\n\t\t// if (visit.to && this.isSameResolvedUrl(visit.to.url, requestedUrl)) {\n\t\t// \tthis.visit = this.createVisit({ to: undefined });\n\t\t// }\n\t\tthis.navigating = false;\n\t} catch (error) {\n\t\t// Return early if error is undefined or signals an aborted request\n\t\tif (!error || (error as FetchError)?.aborted) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Log to console as we swallow almost all hook errors\n\t\tconsole.error(error);\n\n\t\t// Rewrite `skipPopStateHandling` to redirect manually when `history.go` is processed\n\t\tthis.options.skipPopStateHandling = () => {\n\t\t\twindow.location.href = visit.to.url + visit.to.hash;\n\t\t\treturn true;\n\t\t};\n\n\t\t// Go back to the actual page we're still at\n\t\twindow.history.go(-1);\n\t}\n}\n","import type Swup from '../Swup.js';\nimport { classify } from '../helpers.js';\n\n/**\n * Perform the out/leave animation of the current page.\n * @returns Promise<void>\n */\nexport const animatePageOut = async function (this: Swup) {\n\tif (!this.visit.animation.animate) {\n\t\tawait this.hooks.call('animation:skip', undefined);\n\t\treturn;\n\t}\n\n\tawait this.hooks.call('animation:out:start', undefined, (visit) => {\n\t\tthis.classes.add('is-changing', 'is-leaving', 'is-animating');\n\t\tif (visit.history.popstate) {\n\t\t\tthis.classes.add('is-popstate');\n\t\t}\n\t\tif (visit.animation.name) {\n\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t}\n\t});\n\n\tawait this.hooks.call('animation:out:await', { skip: false }, async (visit, { skip }) => {\n\t\tif (skip) return;\n\t\tawait this.awaitAnimations({ selector: visit.animation.selector });\n\t});\n\n\tawait this.hooks.call('animation:out:end', undefined);\n};\n","import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport { query, queryAll } from '../utils.js';\nimport type { PageData } from './fetchPage.js';\n\n/**\n * Perform the replacement of content after loading a page.\n *\n * It takes an object with the page data as returned from `fetchPage` and a list\n * of container selectors to replace.\n *\n * @returns Whether all containers were replaced.\n */\nexport const replaceContent = function (\n\tthis: Swup,\n\t{ html }: PageData,\n\t{ containers }: { containers: Options['containers'] } = this.options\n): boolean {\n\tconst incomingDocument = new DOMParser().parseFromString(html, 'text/html');\n\n\t// Update browser title\n\tconst title = incomingDocument.querySelector('title')?.innerText || '';\n\tdocument.title = title;\n\n\t// Save persisted elements\n\tconst persistedElements = queryAll('[data-swup-persist]:not([data-swup-persist=\"\"])');\n\n\t// Update content containers\n\tconst replaced = containers\n\t\t.map((selector) => {\n\t\t\tconst currentEl = document.querySelector(selector);\n\t\t\tconst incomingEl = incomingDocument.querySelector(selector);\n\t\t\tif (currentEl && incomingEl) {\n\t\t\t\tcurrentEl.replaceWith(incomingEl);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!currentEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in current document: ${selector}`);\n\t\t\t}\n\t\t\tif (!incomingEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in incoming document: ${selector}`);\n\t\t\t}\n\t\t\treturn false;\n\t\t})\n\t\t.filter(Boolean);\n\n\t// Restore persisted elements\n\tpersistedElements.forEach((existing) => {\n\t\tconst key = existing.getAttribute('data-swup-persist');\n\t\tconst replacement = query(`[data-swup-persist=\"${key}\"]`);\n\t\tif (replacement && replacement !== existing) {\n\t\t\treplacement.replaceWith(existing);\n\t\t}\n\t});\n\n\treturn replaced.length === containers.length;\n};\n","import type Swup from '../Swup.js';\n\n/**\n * Update the scroll position after page render.\n * @returns Promise<boolean>\n */\nexport const scrollToContent = function (this: Swup): boolean {\n\tconst options: ScrollIntoViewOptions = { behavior: 'auto' };\n\tconst { target, reset } = this.visit.scroll;\n\tconst scrollTarget = target ?? this.visit.to.hash;\n\n\tlet scrolled = false;\n\n\tif (scrollTarget) {\n\t\tscrolled = this.hooks.callSync(\n\t\t\t'scroll:anchor',\n\t\t\t{ hash: scrollTarget, options },\n\t\t\t(visit, { hash, options }) => {\n\t\t\t\tconst anchor = this.getAnchorElement(hash);\n\t\t\t\tif (anchor) {\n\t\t\t\t\tanchor.scrollIntoView(options);\n\t\t\t\t}\n\t\t\t\treturn !!anchor;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (reset && !scrolled) {\n\t\tscrolled = this.hooks.callSync('scroll:top', { options }, (visit, { options }) => {\n\t\t\twindow.scrollTo({ top: 0, left: 0, ...options });\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn scrolled;\n};\n","import type Swup from '../Swup.js';\nimport { nextTick } from '../utils.js';\n\n/**\n * Perform the in/enter animation of the next page.\n * @returns Promise<void>\n */\nexport const animatePageIn = async function (this: Swup) {\n\tif (!this.visit.animation.animate) {\n\t\treturn;\n\t}\n\n\tconst animation = this.hooks.call(\n\t\t'animation:in:await',\n\t\t{ skip: false },\n\t\tasync (visit, { skip }) => {\n\t\t\tif (skip) return;\n\t\t\tawait this.awaitAnimations({ selector: visit.animation.selector });\n\t\t}\n\t);\n\n\tawait nextTick();\n\n\tawait this.hooks.call('animation:in:start', undefined, () => {\n\t\tthis.classes.remove('is-animating');\n\t});\n\n\tawait animation;\n\n\tawait this.hooks.call('animation:in:end', undefined);\n};\n","import { updateHistoryRecord, getCurrentUrl, classify } from '../helpers.js';\nimport type Swup from '../Swup.js';\nimport type { PageData } from './fetchPage.js';\n\n/**\n * Render the next page: replace the content and update scroll position.\n */\nexport const renderPage = async function (this: Swup, page: PageData): Promise<void> {\n\tconst { url, html } = page;\n\n\tthis.classes.remove('is-leaving');\n\n\t// update state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tupdateHistoryRecord(url);\n\t\tthis.currentPageUrl = getCurrentUrl();\n\t\tthis.visit.to.url = this.currentPageUrl;\n\t}\n\n\t// only add for animated page loads\n\tif (this.visit.animation.animate) {\n\t\tthis.classes.add('is-rendering');\n\t}\n\n\t// save html into visit context for easier retrieval\n\tthis.visit.to.html = html;\n\n\t// replace content: allow handlers and plugins to overwrite paga data and containers\n\tawait this.hooks.call('content:replace', { page }, (visit, { page }) => {\n\t\tconst success = this.replaceContent(page, { containers: visit.containers });\n\t\tif (!success) {\n\t\t\tthrow new Error('[swup] Container mismatch, aborting');\n\t\t}\n\t\tif (visit.animation.animate) {\n\t\t\t// Make sure to add these classes to new containers as well\n\t\t\tthis.classes.add('is-animating', 'is-changing', 'is-rendering');\n\t\t\tif (visit.animation.name) {\n\t\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t\t}\n\t\t}\n\t});\n\n\t// scroll into view: either anchor or top of page\n\t// @ts-ignore: not returning a promise is intentional to allow users to pause in handler\n\tawait this.hooks.call('content:scroll', undefined, () => {\n\t\treturn this.scrollToContent();\n\t});\n\n\tawait this.hooks.call('page:view', { url: this.currentPageUrl, title: document.title });\n};\n","import type Swup from '../Swup.js';\n\nexport type Plugin = {\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true;\n\t/** Name of this plugin */\n\tname: string;\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\t/** The swup instance that mounted this plugin */\n\tswup?: Swup;\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]>;\n\t/** Run on mount */\n\tmount: () => void;\n\t/** Run on unmount */\n\tunmount: () => void;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore: this might be anything, object or no\n\treturn Boolean(maybeInvalidPlugin?.isSwupPlugin);\n};\n\n/** Install a plugin. */\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\n/** Uninstall a plugin. */\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\n/** Find a plugin by name or reference. */\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find(\n\t\t(plugin) =>\n\t\t\tplugin === pluginOrName ||\n\t\t\tplugin.name === pluginOrName ||\n\t\t\tplugin.name === `Swup${String(pluginOrName)}`\n\t);\n}\n","import type Swup from '../Swup.js';\n\n/**\n * Utility function to validate and run the global option 'resolveUrl'\n * @param {string} url\n * @returns {string} the resolved url\n */\nexport function resolveUrl(this: Swup, url: string): string {\n\tif (typeof this.options.resolveUrl !== 'function') {\n\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\treturn url;\n\t}\n\tconst result = this.options.resolveUrl(url);\n\tif (!result || typeof result !== 'string') {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\treturn url;\n\t}\n\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\treturn url;\n\t}\n\treturn result;\n}\n\n/**\n * Compares the resolved version of two paths and returns true if they are the same\n * @param {string} url1\n * @param {string} url2\n * @returns {boolean}\n */\nexport function isSameResolvedUrl(this: Swup, url1: string, url2: string): boolean {\n\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n}\n","import { type DelegateEvent } from 'delegate-it';\n\nimport version from './config/version.js';\n\nimport { delegateEvent, getCurrentUrl, Location, updateHistoryRecord } from './helpers.js';\nimport { type DelegateEventUnsubscribe } from './helpers/delegateEvent.js';\n\nimport { Cache } from './modules/Cache.js';\nimport { Classes } from './modules/Classes.js';\nimport { type Visit, createVisit } from './modules/Visit.js';\nimport { Hooks } from './modules/Hooks.js';\nimport { getAnchorElement } from './modules/getAnchorElement.js';\nimport { awaitAnimations } from './modules/awaitAnimations.js';\nimport { navigate, performNavigation, type NavigationToSelfAction } from './modules/navigate.js';\nimport { fetchPage } from './modules/fetchPage.js';\nimport { animatePageOut } from './modules/animatePageOut.js';\nimport { replaceContent } from './modules/replaceContent.js';\nimport { scrollToContent } from './modules/scrollToContent.js';\nimport { animatePageIn } from './modules/animatePageIn.js';\nimport { renderPage } from './modules/renderPage.js';\nimport { use, unuse, findPlugin, type Plugin } from './modules/plugins.js';\nimport { isSameResolvedUrl, resolveUrl } from './modules/resolveUrl.js';\nimport { nextTick } from './utils.js';\nimport { type HistoryState } from './helpers/createHistoryRecord.js';\n\n/** Options for customizing swup's behavior. */\nexport type Options = {\n\t/** Whether history visits are animated. Default: `false` */\n\tanimateHistoryBrowsing: boolean;\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tanimationSelector: string | false;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tanimationScope: 'html' | 'containers';\n\t/** Enable in-memory page cache. Default: `true` */\n\tcache: boolean;\n\t/** Content containers to be replaced on page visits. Default: `['#swup']` */\n\tcontainers: string[];\n\t/** Callback for ignoring visits. Receives the element and event that triggered the visit. */\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\t/** Selector for links that trigger visits. Default: `'a[href]'` */\n\tlinkSelector: string;\n\t/** How swup handles links to the same page. Default: `scroll` */\n\tlinkToSelf: NavigationToSelfAction;\n\t/** Plugins to register on startup. */\n\tplugins: Plugin[];\n\t/** Custom headers sent along with fetch requests. */\n\trequestHeaders: Record<string, string>;\n\t/** Rewrite URLs before loading them. */\n\tresolveUrl: (url: string) => string;\n\t/** Callback for telling swup to ignore certain popstate events.  */\n\tskipPopStateHandling: (event: PopStateEvent) => boolean;\n\t/** Request timeout in milliseconds. */\n\ttimeout: number;\n};\n\nconst defaults: Options = {\n\tanimateHistoryBrowsing: false,\n\tanimationSelector: '[class*=\"transition-\"]',\n\tanimationScope: 'html',\n\tcache: true,\n\tcontainers: ['#swup'],\n\tignoreVisit: (url, { el } = {}) => !!el?.closest('[data-no-swup]'),\n\tlinkSelector: 'a[href]',\n\tlinkToSelf: 'scroll',\n\tplugins: [],\n\tresolveUrl: (url) => url,\n\trequestHeaders: {\n\t\t'X-Requested-With': 'swup',\n\t\t'Accept': 'text/html, application/xhtml+xml'\n\t},\n\tskipPopStateHandling: (event) => (event.state as HistoryState)?.source !== 'swup',\n\ttimeout: 0\n};\n\n/** Swup page transition library. */\nexport default class Swup {\n\t/** Library version */\n\treadonly version: string = version;\n\t/** Options passed into the instance */\n\toptions: Options;\n\t/** Default options before merging user options */\n\treadonly defaults: Options = defaults;\n\t/** Registered plugin instances */\n\tplugins: Plugin[] = [];\n\t/** Data about the current visit */\n\tvisit: Visit;\n\t/** Cache instance */\n\treadonly cache: Cache;\n\t/** Hook registry */\n\treadonly hooks: Hooks;\n\t/** Animation class manager */\n\treadonly classes: Classes;\n\t/** URL of the currently visible page */\n\tcurrentPageUrl: string = getCurrentUrl();\n\t/** Index of the current history entry */\n\tprotected currentHistoryIndex: number;\n\t/** Delegated event subscription handle */\n\tprotected clickDelegate?: DelegateEventUnsubscribe;\n\t/** Navigation status */\n\tprotected navigating: boolean = false;\n\n\t/** Install a plugin */\n\tuse = use;\n\t/** Uninstall a plugin */\n\tunuse = unuse;\n\t/** Find a plugin by name or instance */\n\tfindPlugin = findPlugin;\n\n\t/** Log a message. Has no effect unless debug plugin is installed */\n\tlog: (message: string, context?: unknown) => void = () => {};\n\n\t/** Navigate to a new URL */\n\tnavigate = navigate;\n\t/** Actually perform a navigation */\n\tprotected performNavigation = performNavigation;\n\t/** Create a new context for this visit */\n\tprotected createVisit = createVisit;\n\t/** Register a delegated event listener */\n\tdelegateEvent = delegateEvent;\n\t/** Fetch a page from the server */\n\tfetchPage = fetchPage;\n\t/** Resolve when animations on the page finish */\n\tawaitAnimations = awaitAnimations;\n\tprotected renderPage = renderPage;\n\t/** Replace the content after page load */\n\treplaceContent = replaceContent;\n\tprotected animatePageIn = animatePageIn;\n\tprotected animatePageOut = animatePageOut;\n\tprotected scrollToContent = scrollToContent;\n\t/** Find the anchor element for a given hash */\n\tgetAnchorElement = getAnchorElement;\n\n\t/** Get the current page URL */\n\tgetCurrentUrl = getCurrentUrl;\n\t/** Resolve a URL to its final location */\n\tresolveUrl = resolveUrl;\n\t/** Check if two URLs resolve to the same location */\n\tprotected isSameResolvedUrl = isSameResolvedUrl;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.handleLinkClick = this.handleLinkClick.bind(this);\n\t\tthis.handlePopState = this.handlePopState.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\t\tthis.classes = new Classes(this);\n\t\tthis.hooks = new Hooks(this);\n\t\tthis.visit = this.createVisit({ to: '' });\n\n\t\tthis.currentHistoryIndex = (history.state as HistoryState)?.index ?? 1;\n\n\t\tif (!this.checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enable();\n\t}\n\n\tprotected checkRequirements() {\n\t\tif (typeof Promise === 'undefined') {\n\t\t\tconsole.warn('Promise is not supported');\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/** Enable this instance, adding listeners and classnames. */\n\tasync enable() {\n\t\t// Add event listener\n\t\tconst { linkSelector } = this.options;\n\t\tthis.clickDelegate = this.delegateEvent(linkSelector, 'click', this.handleLinkClick);\n\n\t\twindow.addEventListener('popstate', this.handlePopState);\n\n\t\t// Set scroll restoration to manual if animating history visits\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\twindow.history.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Create initial history record\n\t\tif ((history.state as HistoryState)?.source !== 'swup') {\n\t\t\tupdateHistoryRecord(null, { index: this.currentHistoryIndex });\n\t\t}\n\n\t\t// Give consumers a chance to hook into enable\n\t\tawait nextTick();\n\n\t\t// Trigger enable hook\n\t\tawait this.hooks.call('enable', undefined, () => {\n\t\t\t// Add swup-enabled class to html tag\n\t\t\tdocument.documentElement.classList.add('swup-enabled');\n\t\t});\n\t}\n\n\t/** Disable this instance, removing listeners and classnames. */\n\tasync destroy() {\n\t\t// remove delegated listener\n\t\tthis.clickDelegate!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.handlePopState);\n\n\t\t// empty cache\n\t\tthis.cache.clear();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.unuse(plugin));\n\n\t\t// trigger disable hook\n\t\tawait this.hooks.call('disable', undefined, () => {\n\t\t\t// remove swup-enabled class from html tag\n\t\t\tdocument.documentElement.classList.remove('swup-enabled');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.hooks.clear();\n\t}\n\n\t/** Determine if a visit should be ignored by swup, based on URL or trigger element. */\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tprotected handleLinkClick(event: DelegateEvent<MouseEvent>) {\n\t\tconst el = event.delegateTarget as HTMLAnchorElement;\n\t\tconst { href, url, hash } = Location.fromElement(el);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if swup is currently navigating towards the link's URL\n\t\tif (this.navigating && url === this.visit.to.url) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.visit = this.createVisit({ to: url, hash, el, event });\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.hooks.call('link:newtab', { href });\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hooks.callSync('link:click', { el, event }, () => {\n\t\t\tconst from = this.visit.from.url ?? '';\n\n\t\t\tevent.preventDefault();\n\n\t\t\t// Handle links to the same page\n\t\t\tif (!url || url === from) {\n\t\t\t\tif (hash) {\n\t\t\t\t\t// With hash: scroll to anchor\n\t\t\t\t\tthis.hooks.callSync('link:anchor', { hash }, () => {\n\t\t\t\t\t\tupdateHistoryRecord(url + hash);\n\t\t\t\t\t\tthis.scrollToContent();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Without hash: scroll to top or load/reload page\n\t\t\t\t\tthis.hooks.callSync('link:self', undefined, () => {\n\t\t\t\t\t\tswitch (this.options.linkToSelf) {\n\t\t\t\t\t\t\tcase 'navigate':\n\t\t\t\t\t\t\t\treturn this.performNavigation();\n\t\t\t\t\t\t\tcase 'scroll':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tupdateHistoryRecord(url);\n\t\t\t\t\t\t\t\treturn this.scrollToContent();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the resolved path hasn't changed\n\t\t\tif (this.isSameResolvedUrl(url, from)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Finally, proceed with loading the page\n\t\t\tthis.performNavigation();\n\t\t});\n\t}\n\n\tprotected handlePopState(event: PopStateEvent) {\n\t\tconst href: string = (event.state as HistoryState)?.url ?? location.href;\n\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.currentPageUrl)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\n\t\tthis.visit = this.createVisit({ to: url, hash, event });\n\n\t\t// Mark as history visit\n\t\tthis.visit.history.popstate = true;\n\n\t\t// Determine direction of history visit\n\t\tconst index = (event.state as HistoryState)?.index ?? 0;\n\t\tif (index && index !== this.currentHistoryIndex) {\n\t\t\tconst direction = index - this.currentHistoryIndex > 0 ? 'forwards' : 'backwards';\n\t\t\tthis.visit.history.direction = direction;\n\t\t\tthis.currentHistoryIndex = index;\n\t\t}\n\n\t\t// Disable animation & scrolling for history visits\n\t\tthis.visit.animation.animate = false;\n\t\tthis.visit.scroll.reset = false;\n\t\tthis.visit.scroll.target = false;\n\n\t\t// Animated history visit: re-enable animation & scroll reset\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\tthis.visit.animation.animate = true;\n\t\t\tthis.visit.scroll.reset = true;\n\t\t}\n\n\t\t// Does this even do anything?\n\t\t// if (!hash) {\n\t\t// \tevent.preventDefault();\n\t\t// }\n\n\t\tthis.hooks.callSync('history:popstate', { event }, () => {\n\t\t\tthis.performNavigation();\n\t\t});\n\t}\n\n\t/** Determine whether an element will open a new tab when clicking/activating. */\n\tprotected triggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],"names":["classify","text","fallback","String","toLowerCase","replace","getCurrentUrl","hash","location","pathname","search","createHistoryRecord","url","customData","data","random","Math","source","history","pushState","updateHistoryRecord","state","replaceState","delegateEvent","selector","type","callback","options","controller","AbortController","signal","delegate","destroy","abort","Location","URL","constructor","base","document","baseURI","super","toString","Object","setPrototypeOf","this","prototype","fromElement","el","href","getAttribute","fromUrl","matchPath","path","match","error","Error","fetchPage","_this","_temp2","_result","status","responseUrl","response","Promise","resolve","then","html","hooks","call","FetchError","finalUrl","page","visit","cache","write","method","set","headers","requestHeaders","timeout","timedOut","timeoutId","setTimeout","_temp","fetch","_this$hooks$call","clearTimeout","_catch","name","aborted","e","reject","message","details","Cache","swup","pages","Map","size","all","copy","forEach","key","has","get","result","callSync","update","payload","delete","clear","undefined","prune","predicate","urlToResolve","resolveUrl","query","context","querySelector","queryAll","Array","from","querySelectorAll","nextTick","requestAnimationFrame","isPromise","obj","runAsPromise","func","args","forceReflow","element","body","offsetHeight","escapeCssIdentifier","ident","window","CSS","escape","toMs","s","Number","slice","Classes","swupClasses","selectors","scope","animation","containers","isArray","join","targets","trim","add","target","classList","arguments","remove","className","split","filter","c","isSwupClass","some","startsWith","createVisit","to","currentPageUrl","event","id","animate","wait","animationScope","animationSelector","trigger","read","action","popstate","direction","scroll","reset","_iteratorSymbol","Symbol","iterator","pact","value","_Pact","o","_settle","bind","v","observer","onFulfilled","onRejected","_isSettledPact","thenable","Hooks","registry","init","hook","create","exists","ledger","console","on","handler","warn","registration","off","before","once","defaultHandler","after","getHandlers","run","dispatchDomEvent","runSync","registrations","_this2","results","check","step","_cycle","next","done","return","_fixup","TypeError","values","i","push","array","length","_forOf","found","replaced","sort","sortRegistrations","T","index","createDefaultHandler","a","b","priority","detail","dispatchEvent","CustomEvent","bubbles","getAnchorElement","charAt","substring","decoded","decodeURIComponent","getElementById","awaitAnimations","elements","animatedElements","awaitedAnimations","map","propCount","expectedType","styles","getComputedStyle","transitionDelays","getStyleProperties","TRANSITION","transitionDurations","transitionTimeout","calculateTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","max","getTransitionInfo","endEvent","startTime","performance","now","propsTransitioned","end","removeEventListener","onEnd","includes","isTransitionOrAnimationEvent","elapsedTime","addEventListener","awaitAnimationsOnElement","Boolean","delays","durations","concat","duration","performNavigation","navigating","referrer","classes","animationPromise","animatePageOut","pagePromise","renderPage","animatePageIn","_temp3","_this$fetchPage","cachedPage","newUrl","currentHistoryIndex","skipPopStateHandling","go","navigate","shouldIgnoreVisit","_exit","skip","replaceContent","incomingDocument","DOMParser","parseFromString","title","innerText","persistedElements","currentEl","incomingEl","replaceWith","existing","replacement","scrollToContent","behavior","scrollTarget","scrolled","anchor","scrollIntoView","scrollTo","top","left","isSameResolvedUrl","use","plugin","maybeInvalidPlugin","isSwupPlugin","_checkRequirements","_beforeMount","mount","plugins","unuse","pluginOrName","findPlugin","unmount","_afterUnmount","p","find","url1","url2","defaults","animateHistoryBrowsing","ignoreVisit","closest","linkSelector","linkToSelf","Accept","Swup","version","clickDelegate","log","handleLinkClick","handlePopState","checkRequirements","enable","scrollRestoration","documentElement","origin","triggerWillOpenNewWindow","delegateTarget","preventDefault","metaKey","ctrlKey","shiftKey","altKey","button","triggerEl","matches"],"mappings":"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"}